[
  {
    "objectID": "users.html",
    "href": "users.html",
    "title": "Users",
    "section": "",
    "text": "R has built-in support for multiple repositories. Simply add R-releases to your repository settings:\noptions(repos = c(\"https://r-releases.r-universe.dev\", getOption(\"repos\")))\nThis is required only once per session. We recommend adding this line to your .Rprofile so that it is set automatically.\nAlternatively, to prioritize CRAN over R-releases:\noptions(repos = c(getOption(\"repos\"), \"https://r-releases.r-universe.dev\"))\nThen proceed to use install.packages() or pak::pak() etc. as you would normally."
  },
  {
    "objectID": "users.html#how-to-install-a-package-from-r-releases",
    "href": "users.html#how-to-install-a-package-from-r-releases",
    "title": "Users",
    "section": "",
    "text": "R has built-in support for multiple repositories. Simply add R-releases to your repository settings:\noptions(repos = c(\"https://r-releases.r-universe.dev\", getOption(\"repos\")))\nThis is required only once per session. We recommend adding this line to your .Rprofile so that it is set automatically.\nAlternatively, to prioritize CRAN over R-releases:\noptions(repos = c(getOption(\"repos\"), \"https://r-releases.r-universe.dev\"))\nThen proceed to use install.packages() or pak::pak() etc. as you would normally."
  },
  {
    "objectID": "users.html#what-does-r-releases-provide",
    "href": "users.html#what-does-r-releases-provide",
    "title": "Users",
    "section": "What does R-releases provide?",
    "text": "What does R-releases provide?\n\n\n\n\n\n\n1. A home for non-CRAN packages\n\n\n\n\n\nMany R packages do not belong on CRAN. In particular, packages containing compiled code may require toolchains or binary downloads that fall outside of CRAN policy.\nBy contributing a package to R-releases, you may conveniently install the latest released versions of all these packages from a single repository location.\n\n\n\n\n\n\n\n\n\n2. A guarantee of package availability\n\n\n\n\n\nR-releases works seamlessly alongside CRAN. By prioritizing CRAN in the settings above, you can continue to get packages from CRAN, only using R-releases as a fall-back.\nA package may become unavailable on CRAN at any time due to its strict archival policy.\n\nSometimes due to the archival of a dependency, and outside the maintainer’s direct control.\nSituations can be temporary, but may take an extended time to resolve.\n\nBy contributing a package that you rely on, you can ensure it always remains available for your critical workflows.\n\n\n\n\n\n\n\n\n\n3. A distribution channel direct from maintainers\n\n\n\n\n\nMaintainers may use R-releases as a faster release channel, especially for packages under intensive development.\nCRAN is first and foremost an archival network, and its policy restricts the frequency of package updates. R-releases allows maintainers to push critical updates or bug fixes directly to users.\nIf a package maintainer recommends that you install a package from R-releases, please prioritize R-releases in front of CRAN in the repository settings above."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R-releases",
    "section": "",
    "text": "R-releases is a community-curated, maintainer-driven repository of R package releases.\nAnyone can contribute packages in the GitHub repository at https://github.com/r-releases/contributions. Once a package is registered, R-universe automatically builds and checks every new release and makes it available to install from https://r-releases.r-universe.dev/. Package maintainers have complete control over deployment.\nThe R-releases project originated from the R Consortium Repositories Working Group."
  },
  {
    "objectID": "conduct.html",
    "href": "conduct.html",
    "title": "Code of Conduct",
    "section": "",
    "text": "We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community."
  },
  {
    "objectID": "conduct.html#our-pledge",
    "href": "conduct.html#our-pledge",
    "title": "Code of Conduct",
    "section": "",
    "text": "We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community."
  },
  {
    "objectID": "conduct.html#our-standards",
    "href": "conduct.html#our-standards",
    "title": "Code of Conduct",
    "section": "Our Standards",
    "text": "Our Standards\nExamples of behavior that contributes to a positive environment for our community include:\n\nDemonstrating empathy and kindness toward other people\nBeing respectful of differing opinions, viewpoints, and experiences\nGiving and gracefully accepting constructive feedback\nAccepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\nFocusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\nThe use of sexualized language or imagery, and sexual attention or advances of any kind\nTrolling, insulting or derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others’ private information, such as a physical or email address, without their explicit permission\nPlagiarism\nCopyright violations\nOther conduct which could reasonably be considered inappropriate in a professional setting"
  },
  {
    "objectID": "conduct.html#enforcement-responsibilities",
    "href": "conduct.html#enforcement-responsibilities",
    "title": "Code of Conduct",
    "section": "Enforcement Responsibilities",
    "text": "Enforcement Responsibilities\nCommunity leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate."
  },
  {
    "objectID": "conduct.html#scope",
    "href": "conduct.html#scope",
    "title": "Code of Conduct",
    "section": "Scope",
    "text": "Scope\nThis Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event."
  },
  {
    "objectID": "conduct.html#enforcement",
    "href": "conduct.html#enforcement",
    "title": "Code of Conduct",
    "section": "Enforcement",
    "text": "Enforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at will.landau.oss@gmail.com. All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident."
  },
  {
    "objectID": "conduct.html#enforcement-guidelines",
    "href": "conduct.html#enforcement-guidelines",
    "title": "Code of Conduct",
    "section": "Enforcement Guidelines",
    "text": "Enforcement Guidelines\nCommunity leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n1. Correction\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n\n2. Warning\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n\n3. Temporary Ban\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n\n4. Permanent Ban\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community."
  },
  {
    "objectID": "conduct.html#attribution",
    "href": "conduct.html#attribution",
    "title": "Code of Conduct",
    "section": "Attribution",
    "text": "Attribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla’s code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "What is R-releases?",
    "section": "",
    "text": "A traditional software version cycle begins with the development phase, where bugs are expected and ironed out, and ends with the production phase, which promises a seamless user experience.\nR-releases currently aims at a space just before production, commonly referred to as QA, in that:\n\nEach package release has the full endorsement of its own maintainer. R-releases always provides a version that its developer chose to distribute for general use.\nThe user is still responsible for judging whether a package is appropriate to use. Some releases may still have issues, and these may be indicated by the check results at https://r-releases.r-universe.dev/builds."
  },
  {
    "objectID": "about.html#the-quality-assurance-qa-for-r-packages",
    "href": "about.html#the-quality-assurance-qa-for-r-packages",
    "title": "What is R-releases?",
    "section": "",
    "text": "A traditional software version cycle begins with the development phase, where bugs are expected and ironed out, and ends with the production phase, which promises a seamless user experience.\nR-releases currently aims at a space just before production, commonly referred to as QA, in that:\n\nEach package release has the full endorsement of its own maintainer. R-releases always provides a version that its developer chose to distribute for general use.\nThe user is still responsible for judging whether a package is appropriate to use. Some releases may still have issues, and these may be indicated by the check results at https://r-releases.r-universe.dev/builds."
  },
  {
    "objectID": "about.html#continuous-maintainer-driven-deployment",
    "href": "about.html#continuous-maintainer-driven-deployment",
    "title": "What is R-releases?",
    "section": "Continuous maintainer-driven deployment",
    "text": "Continuous maintainer-driven deployment\nEach package only needs to be registered once. Every new release automatically deploys to https://r-releases.r-universe.dev without needing to go through R-releases again. In other words, the package maintainer is in complete control. This frictionless, maintainer-driven experience was made possible by the incredible infrastructure of rOpenSci’s R-universe system and key insights from Jeroen Ooms."
  },
  {
    "objectID": "about.html#what-about-my-personal-r-universe",
    "href": "about.html#what-about-my-personal-r-universe",
    "title": "What is R-releases?",
    "section": "What about my personal R-universe?",
    "text": "What about my personal R-universe?\nR-releases perfectly complements your existing personal or organization R-universe. This can continue to hold either release or development versions for yourself and your colleagues. At the same time, R-releases deploys the latest package releases directly to the wider community."
  },
  {
    "objectID": "contributors.html",
    "href": "contributors.html",
    "title": "Contributors",
    "section": "",
    "text": "The code of conduct governs all forms of participation in the R-releases project, including package contributions, issues, discussions, and the development of infrastructure. Administrators, moderators, and contributors are all subject to its terms."
  },
  {
    "objectID": "contributors.html#how-to-register-a-package-with-r-releases",
    "href": "contributors.html#how-to-register-a-package-with-r-releases",
    "title": "Contributors",
    "section": "How to register a package with R-releases",
    "text": "How to register a package with R-releases\n\nThe one-time registration process\n\nNavigate to https://github.com/r-releases/contributions.\nOpen a GitHub pull request to add one or more listings to the packages folder.\n\nWatch this 1-minute video to learn how:\n\n\n\n\n\n\n\nRequirements for registration\nEach package listing is a simple text file:\n\nThe file name is the package name.\nThe file contains a single line with the package URL. Example: https://github.com/r-lib/gh\n\nThe URL in (2) must be the true and authentic GitHub/GitLab location of the package according to its owners, or an active mirror of the true location.\n\n\n\n\n\n\nPrerequisites for packages\n\n\n\n\nThe package source code must exist in a public GitHub or GitLab repository with the DESCRIPTION file at the root of the project. Example: https://github.com/r-lib/gh.\nThe repository must host a GitHub release or GitLab release for the latest version intended for distribution. Example: https://github.com/r-lib/gh/releases/tag/v1.4.0. Pre-releases (GitHub) and upcoming releases (GitLab) are ignored to ensure each release has the full endorsement of its maintainer.\n\n\n\n\n\n\n\n\n\nPackages in a GitHub repo subdirectory\n\n\n\n\n\nIn rare cases, the package may be in a subdirectory of a GitHub repo. In these cases, your text file may instead contain a JSON list with fields package, url, subdir, and branch, and the branch field must be \"*release\". Example:\n{\n  \"package\": \"paws.analytics\",\n  \"url\": \"https://github.com/paws-r/paws\",\n  \"subdir\": \"cran/paws.analytics\",\n  \"branch\": \"*release\"\n}"
  },
  {
    "objectID": "contributors.html#how-to-create-a-badge",
    "href": "contributors.html#how-to-create-a-badge",
    "title": "Contributors",
    "section": "How to create a badge",
    "text": "How to create a badge\n\nTo add a dynamic ‘R-releases’ badge for package readme files, like the one above, copy the following markdown snippet, replacing ‘pkgNAME’ with the actual package name in both places it appears:\n[![R-releases status](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fr-releases.r-universe.dev%2Fapi%2Fpackages%2FpkgNAMEquery=%24.Version&label=R-releases)](https://r-releases.r-universe.dev/pkgNAME)"
  },
  {
    "objectID": "contributors.html#how-to-edit-or-remove-packages",
    "href": "contributors.html#how-to-edit-or-remove-packages",
    "title": "Contributors",
    "section": "How to edit or remove packages",
    "text": "How to edit or remove packages\nTo edit or remove one or more packages, submit a pull request to edit the files in the packages folder. To protect the package ecosystem, these kinds of pull requests are always flagged for manual review and never automatically merged."
  },
  {
    "objectID": "contributors.html#how-pull-requests-are-reviewed",
    "href": "contributors.html#how-pull-requests-are-reviewed",
    "title": "Contributors",
    "section": "How pull requests are reviewed",
    "text": "How pull requests are reviewed\nAn automated process periodically scans each new pull request to https://github.com/r-releases/contributions. Depending on the results of the automated checks, the bot automatically merges the pull request, closes it, or flags it for manual review. In the latter case, an R-releases moderator will manually review your pull request and contact you if there are questions. Please see our review policy for more information about the process."
  },
  {
    "objectID": "contributors.html#how-the-r-releases-universe-is-built",
    "href": "contributors.html#how-the-r-releases-universe-is-built",
    "title": "Contributors",
    "section": "How the R-releases universe is built",
    "text": "How the R-releases universe is built\nPeriodically, a GitHub Actions workflow collects all the packages and URLs from the packages folder and builds the packages.json file for the universe at https://github.com/r-releases/r-releases.r-universe.dev. https://r-releases.r-universe.dev periodically refreshes to include the latest release of each package in packages.json."
  },
  {
    "objectID": "contributors.html#ownership-and-attribution",
    "href": "contributors.html#ownership-and-attribution",
    "title": "Contributors",
    "section": "Ownership and attribution",
    "text": "Ownership and attribution\nEach submitted package URL must be authentic and genuine. The URL must be the true location of the package according to its true owners. If a URL in https://github.com/r-releases/contributions/tree/main/packages points to the wrong place, please submit a pull request to https://github.com/r-releases/contributions to fix the URL. If you do not know the correct URL or do not want to submit a pull request, please open an issue at https://github.com/r-releases/help/issues."
  },
  {
    "objectID": "contributors.html#getting-help",
    "href": "contributors.html#getting-help",
    "title": "Contributors",
    "section": "Getting help",
    "text": "Getting help\nPlease report bugs to https://github.com/r-releases/help/issues and send other feedback and questions to https://github.com/r-releases/help/discussions. Please note that https://github.com/r-releases/contributions can only accept pull requests to add or modify package entries."
  },
  {
    "objectID": "review.html",
    "href": "review.html",
    "title": "Review Policy",
    "section": "",
    "text": "As the contributors page explains, updates to the R-releases package listings come from pull requests to https://github.com/r-releases/contributions from members of the R community. In the vast majority of cases, a GitHub app automatically merges the pull request. However, some pull requests need to be manually reviewed by an R-releases moderator. This document describes this manual review process. The goals are to:"
  },
  {
    "objectID": "review.html#the-automated-review-process",
    "href": "review.html#the-automated-review-process",
    "title": "Review Policy",
    "section": "The automated review process",
    "text": "The automated review process\nThe review_pull_requests.yaml GitHub Actions workflow runs periodically and reviews each new open pull request using r.releases.internals::review_pull_request(). Depending on the results of the automated checks, the bot will automatically merge the pull request, close it, or flag it for manual review. The bot will post an informative comment explaining the decision, and it may add a GitHub label to the pull request for triage purposes.\nThe pull request is automatically closed if:\n\nIt attempts to add/modify/delete a file outside the packages folder.\nIt attempts to add/modify/delete a file in a subdirectory of the packages folder.\n\nThe pull request is automatically flagged for manual review if:\n\nIt attempts to modify or delete any existing file in packages.\nA contributed text file is not a single-line file.\nThe text file looks like a custom JSON entry (for packages in a subdirectory of a GitHub repository).\nThe name of the the text file is not a valid R package name.\nThe URL in the text file cannot be parsed.\nThe URL scheme is anything other than HTTPS.\nThe domain of the URL is anything other than github.com or gitlab.com.\nThe URL points to an organization or user such as https://github.com/r-lib rather than a repository such as https://github.com/r-lib/gh.\nThe URL does not exist or is not online at the time it is checked (HTTP error trying to access it).\nA release could not be found at the repo in the URL.\nThe version-controlled repository name in the URL is different from the name of the file. (For example, if the file is named gh as the package, then the URL https://github.com/r-lib/gh-package would be flagged for manual review, but https://github.com/r-lib/gh would not.)\nThe repository is part of the CRAN mirror at https://github.com/cran.\nThe package is also on CRAN, and the URL in the pull request cannot be found in the DESCRIPTION file of the latest CRAN release."
  },
  {
    "objectID": "review.html#the-manual-review-process",
    "href": "review.html#the-manual-review-process",
    "title": "Review Policy",
    "section": "The manual review process",
    "text": "The manual review process\nIf a pull request is flagged for manual review, an R-releases moderator will read the pull request and ask questions if necessary. Although the moderator may make optional suggestions on a case-by-case basis, package reviews must be consistent, reliable, and inclusive whenever possible. The decision to close or merge the pull request must be based exclusively on the following pre-defined list of requirements:\n\nEach contribution must comply with the code of conduct. Examples of prohibited content include profanity, malicious behavior, security risks, copyright violations, and other conduct which could reasonably be considered inappropriate in a professional setting. All this applies to the package, the URL, any other metadata in the contribution, and the contents of the package itself.\nThe package name, URL, and all other metadata must be complete and correct.\nEach text file must apply to only one package.\nThe text file name must be the name of the package.\nFor JSON listings, the \"branch\" field must be \"*release\" (except in specific predetermined cases such as packages in https://github.com/cran), the \"subdirectory\" field must be supplied and exist, the \"url\" field must exist and be correct, and the \"package\" field must agree with the name of the text file.\nEach contributed URL must point to an existing GitHub or GitLab repository.\nThe URL must be the true/official location of the source code or a faithful mirror of the true location. The package maintainers have the authority to choose the URL. Unofficial or unsupported forks should not be included. The moderator must use discretion on a case-by-case basis because sometimes a fork becomes the true version (e.g. if the original maintainer abandons a package and becomes unreachable indefinitely).\nThe URL must have a release on GitHub or GitLab so R-universe can process the package without error. As a last resort, if the maintainer does not provide their own releases, a repository from the CRAN mirror at https://github.com/cran may be registered.\nIf the listing of an existing package is modified, then the moderator must verify that the new information is complete and correct. In many cases, it may be necessary to obtain permission from the package maintainer.\nThe reasons for deleting a package listing may vary on a case-by-case basis. The moderator must carefully consider the impact that deletion would have on the community and on reverse dependencies. In many cases, it may be necessary to obtain permission from the package maintainer."
  }
]